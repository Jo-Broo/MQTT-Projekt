Dokumentation - Florian Diehle, Cornelius Müller, Niklas Soika, Jonas Wolf

08.02.2024___________________________________________________________________________________________________
- Begriffsdefinition und Erklärungen 
- Versuch Zugriff auf Raspberry Pi per SSH
- MQTT Broker Mosquito 2.0.18 installiert
- MQTT Fx installiert
- Versuch Verbindungsaufbau (fehlgeschlagen)
- Broker Dienst gestartet
- publish Nachricht erstellt 
  neue Topic erstellt : "Test"
  Daten auf dem Topic gepublished : 25
- subscribe Nachricht erstellt
  Topic "Test" subscribed
  neue Daten gesendet : 25
  Daten auf Client empfangen : 25
- Broker auf offentlich gestellt und mit anderen Clients aus der Gruppe getestet
-schreiben Dokumentation

11.04.2024___________________________________________________________________________________________________
-ESP-Sketch geschrieben
-testen des publishen über den ESP
-auf Mosquito gepublished als Test
-Node-JS installiert für Node-Red
-install von Node-Red
-hat nicht funktionert (Server startet nicht) -> erneuter Ablauf des installs
-Versuch bei Cornelius zu installieren -> Abgebrochen
-Update des Schaubildes für MQTT Broker
-schreiben Dokumentation

18.04.2024___________________________________________________________________________________________________
-Neue Installation von MQTT wegen Abwesentheit von Jonas Wolf
-Vebindungsaufbau (erfolgreich)
-Test publish
-Installation von Node Red (erfolgreich)
-Update Node Red auf neuste Version
-Start Node Red
-Verbindung mit Node Red über localhost 
-Node Red Verbindung mit MQTT Server 
-Installation Node Red Dashboard
-Erstellen von Textfeld für die gesendete Temperatur | Grad Celsius
-Erstellen von einem Diagramm für die Ausgabe der Temperatur | Grad Celsius
-Erstellen von Textfeld für die gesendete Temperatur | Grad Fahrenheit
-Erstellen Diagramm für die Ausgabe der Temperatur | Grad Fahrenheit
-Anzeigen von Temperatur im Dashboard (erfolgreich)
-schreiben Dokumentation

16.05.2024___________________________________________________________________________________________________
-Wiederaufbau Temperatursenor und Esp32
-Start MQTT auf Laptop Jonas
-Start Node Red auf Laptop Cornelius
-Start Mosquito auf Laptop Jonas
-Test Publish (nicht erfolgreich)
-Neuer Test (erfolgreich)
  auf Topic Jonas Message: Test -> empfangen auf Cornelius Laptop in Topic Jonas
-Code umgeschrieben weil Jonas seinen eigenen Sensor der vorher verwendet wurde vergessen hat
-Erstellen von Dashboard in NodeRed für Ausgabe von Temperaturen
-Erstellen von Textfeld für die gesendete Temperatur vom Esp32 | Grad Celsius
-Erstellen von einem Diagramm für die gesendete Temperatur vom Esp32 | Grad Celsius
-Anpassen von Code für Celsius und Fahrenheit auf den topics Temperature_Celsius und Temperature_Fahrenheit
-Erstellen von Textfeld für die gesendete Temperatur vom Esp32 | Grad Fahrenheit
-Erstellen von einem Diagramm für die gesendete Temperatur vom Esp32 | Grad Fahrenheit
-Node Red MySql Modul gesucht
-node-red-mysql-r2 installiert
-Erstellen neuer Datenbank in Heidi SQL mit Namen NodeRed (fehlgeschlagen)
-installieren von Postgresql
-Posgres Anbindung in Node Red 
-Einfügen der subscribten Werte in neue Tabellen
-schreiben Dokumentation


Begriffe, Definitionen usw.

MQTT (Message Queuing Telemetry Protocol) ist ein Netzwerkprotokoll für die Kommunikation zwischen Maschinen bzw. von Machine zu Machine (M2M).
  Es wurde 1999 von Dr. Andy Stanford-Clark und Arlen Nipper erfunden. Das Protokoll wurde für minimalen Batterieverlust
  und minmale Bandbreite, bei der Kommunikation zwischen Satelit und Ölpipelines entwickelt und später wurde der primäre 
  Fokus auf das Internet of Things und dessen Anwendungsfälle gelegt.

MQTT-Broker/Server = Aufgabe des Brokers ist das Filtern aller eingehenden Nachrichten, sowie
  das verteilen an die Abonennten.

MQTT-Client = jedes Gerät, vom Server bis zum Microcontroller, 
  auf dem eine MQTT-Bibliothek läuft und das über ein Netzwerk kommuniziert.

Subscribe-Nachricht = ein Client sendet eine SUBSCRIBE-Nachricht an den MQTT-Broker 
  um über Themen von Interesse informiert zu werden. 
  Diese Nachricht besteht aus einem eindeutigen Bezeichner und einer Liste aus Abonnements.

Das Topic übersetzt Thema, wird vom Broker zum Filtern von Nachrichten aller Clients verwendet. 
Das Topic besteht aus einer oder mehreren Themenebenen. Jede Themenebene wird durch einen Schrägstrich (/) getrennt. 
Wenn ein Client ein Topic abonniert, kann er genau das Topic einer veröffentlichten Nachricht abonnieren oder er kann Platzhalter verwenden, um mehrere Topics gleichzeitig zu abonnieren. 

Publish-Nachricht bezeichnet eine Nachricht, die ein MQTT-Client an einen MQTT-Broker sendet, um sie an alle Clients zu verteilen, die sich für dieses spezifische Thema (Topic) abonniert haben+

Payload:

Jeder Broker verteilt Nachrichten die einen Topic besitzen und, logischerweise, einen Nachrichteninhalt. Dies ist der Payload.
Obwohl dem Payload keine Struktur vorgeschrieben ist, sollte man sich an eine gewisse Struktur binden damit dieser von anderen Geräten und Software gelesen werden kann.
Mögliche Optionen wären unter anderem JSON, XML oder OPC UA. Falls die Struktur festgelegt wurde hat dies sen Vorteil das es auch zu einer Reibungslosen kommunikation unter den Geräten kommt.

Quality of Service
Der Quality of Service gibt an, wie sicher eine Nachricht schlussendlich zugestellt werden soll. Insgesamt gibt es drei verschiedene Stufen, von 0 bis 2

Stufe 0:
Es wird höchstens einmal übertragen.

Stufe 1:
Es wird mindestens einmal übertragen.

Stufe 2:
Es wird genau einmal übertragen.
